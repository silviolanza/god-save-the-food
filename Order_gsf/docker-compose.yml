version: '3'

services:
  dbpostgresql:
    container_name: postgres-ordergsf
    image: "postgres"
    ports:
      - "5432"
    volumes:
      - db-data-order:/var/lib/postgresql/data
    networks:
      - postgres-ordergsf-net
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: orderdb
      restart: unless-stopped
  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin

    ports:
      - "${PGADMIN_PORT:-5050}:80"
    networks:
      - postgres-ordergsf-net
    restart: unless-stopped

  app:
    build: .
    image: ordergsf
    container_name: ordergsf
    ports:
      - "8082:8080"
    depends_on:
      - dbpostgresql
    networks:
      - postgres-ordergsf-net
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://dbpostgresql:5432/orderdb
      - SPRING_DATASOURCE_USERNAME=admin
      - SPRING_DATASOURCE_PASSWORD=admin
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
volumes:
  db-data-order:
  pgadmin:
networks:
  postgres-ordergsf-net:
    driver: bridge
# docker-compose build && docker-compose up
